#
# Copyright 2014-2016 Red Hat, Inc. and/or its affiliates
# and other contributors as indicated by the @author tags.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###
# Services configuration
###
# List of services to start (comma-separated)
# Available services: udp,tcp,ganglia,statsd,collectd,graphite
services=collectd,graphite
# syslog
# default port in Unix is 514 - that needs root to open the socket
services.port.udp=5140
# general mulitplexed port for tcp. Accepts syslog, ganglia formats
services.port.tcp=5140
# Settings for reception of Ganglia over UDP multicast
# Note that either gmond must run on the local host, of have a TTL >> 1 assigned
services.ganglia.group=239.2.11.71
services.ganglia.port=8649
# ptrans tries to automatically detect the right interface for multicast from the hostname
# if that fails you can uncomment the next line and explicitly set it
# services.multicast.interface=eth0
# UDP port for statsd type of messages
services.statsd.port=8125
# UDP port for collectd type of messages
services.collectd.port=25826
# TCP port for graphite type of messages
services.graphite.port=2003
###
# Backend configuration
###
# Metrics service url
metrics.url=http://localhost:8080/hawkular/metrics
# Tenant Header switch. Older versions of Hawkular reject requests having a tenant header
metrics.tenant.send=true
# Tenant selection. Ignored if 'metrics.tenant.send' is set to false
metrics.tenant=default
# Authentication switch.
metrics.auth.enabled=false
# Authentication id
metrics.auth.id=username
# Authentication secret
metrics.auth.secret=secret
# Additional headers
# In order to send specific HTTP headers, add lines of the following form:
# metrics.http.header.<id>.name=<header name>
# metrics.http.header.<id>.value.1=<header value1>
# metrics.http.header.<id>.value.2=<header value2>
# The number after 'value' determines the order of the header values
# Here is an example for Openshift-Metrics Bearer token authentication
#metrics.http.header.auth.name=Bearer
#metrics.http.header.auth.value.1=jsqk5766hghj-JKHKJ7kjhkj
# Maximum number of HTTP connections used to send metrics to the backend
metrics.max-connections=10
# Size of the metric batches sent to the backend
metrics.batch-size=50